/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.palm.valley.frames;

import com.palm.valley.beans.AccountBean;
import com.palm.valley.beans.OrderBean;
import com.palm.valley.beans.OrderDetailBean;
import com.palm.valley.beans.ProductBean;
import com.palm.valley.beans.TaxBean;
import com.palm.valley.beans.UserBean;
import com.palm.valley.dao.OrderDAO;
import com.palm.valley.dao.OrderDetailDAO;
import com.palm.valley.dao.ProductDAO;
import com.palm.valley.dao.TaxDAO;
import com.palm.valley.dao.UserDAO;
import com.palm.valley.daoimpl.OrderDAOImpl;
import com.palm.valley.daoimpl.OrderDetailDAOImpl;
import com.palm.valley.daoimpl.ProductDAOImpl;
import com.palm.valley.daoimpl.TaxDAOImpl;
import com.palm.valley.daoimpl.UserDAOImpl;
import static com.palm.valley.frames.ProductFrame.tableModel;
import com.palm.valley.utill.BarcodeGenerator;
import com.palm.valley.utill.UtilityClass;
import java.awt.Color;
import java.awt.MouseInfo;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import static java.lang.Integer.parseInt;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Timestamp;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.sql.Date;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Calendar;

import java.util.List;
import java.util.Locale;
import java.util.Vector;
import java.util.function.Consumer;
import javax.swing.JFrame;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;
import javax.swing.table.DefaultTableModel;
import javax.swing.JTable;
/**
 *
 * @author Dell
 */
public class OrderFrame extends javax.swing.JFrame {
    UserBean currentUser;
    DefaultTableModel model ;
    TaxBean taxBean;
    UserBean customer;
    private final JPopupMenu popupMenu = new JPopupMenu();
    private JMenuItem menuItem =  null;
    public OrderFrame() {
        initComponents();
        addBtn.setEnabled(false);
        populateProductTable();
        model = (DefaultTableModel) orderTable.getModel();
        model.setRowCount(0);
        orderNo();
        popMenu(this);
//        populateCustomerCombo();
        setCurrentTax();
    }
    public OrderFrame(UserBean userBean){
        initComponents();
        addBtn.setEnabled(false);
        populateProductTable();
        model = (DefaultTableModel) orderTable.getModel();
        model.setRowCount(0);
        orderNo();
        popMenu(this);
//        populateCustomerCombo();
        setCurrentTax();
        currentUser = userBean;
    }
    
    public OrderFrame(Integer id,UserBean user){
         initComponents();
        
        populateProductTable();
        popMenu(this);
        customer = new UserDAOImpl().getUserById(id);
        customerTxtField.setText(customer.getFullName());
        model = (DefaultTableModel) orderTable.getModel();
        model.setRowCount(0);
        orderNo();
        popMenu(this);
        setCurrentTax();
        currentUser = user;
        customerTypeCombo.setSelectedItem("Register");
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        orderDate = new com.toedter.calendar.JDateChooser();
        orderNoTxtField = new javax.swing.JTextField();
        customerTypeCombo = new javax.swing.JComboBox<>();
        quantityTxtField = new javax.swing.JTextField();
        productTxtField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        orderTable = new javax.swing.JTable();
        addBtn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        productTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        quantitylbl = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        errorlbl = new javax.swing.JLabel();
        totalTxtField = new javax.swing.JTextField();
        taxTxtField = new javax.swing.JTextField();
        grandTotalTxtField = new javax.swing.JTextField();
        saveOrderBtn = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        customerTxtField = new javax.swing.JTextField();
        quantitylbl1 = new javax.swing.JLabel();
        searchCustomerBtn = new javax.swing.JButton();
        currentUserlbl = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        orderDate.setCalendar(Calendar.getInstance());

        orderNoTxtField.setEnabled(false);

        customerTypeCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Walkin", "Register" }));
        customerTypeCombo.setToolTipText("");
        customerTypeCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customerTypeComboActionPerformed(evt);
            }
        });

        quantityTxtField.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                quantityTxtFieldMouseClicked(evt);
            }
        });

        productTxtField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                productTxtFieldActionPerformed(evt);
            }
        });
        productTxtField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                productTxtFieldKeyPressed(evt);
            }
        });

        orderTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        orderTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                orderTableMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(orderTable);

        addBtn.setText("Add");
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });

        productTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        productTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                productTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(productTable);

        jLabel1.setText("Order Date");

        jLabel2.setText("Order no:");

        jLabel3.setText("Customer Type");

        quantitylbl.setText("Quantity");

        jLabel5.setText("Product");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setText("Product Table");

        saveOrderBtn.setText("SAVE");
        saveOrderBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveOrderBtnActionPerformed(evt);
            }
        });

        jLabel4.setText("Total");

        jLabel7.setText("Tax");

        jLabel8.setText("Grand total");

        customerTxtField.setEditable(false);
        customerTxtField.setEnabled(false);
        customerTxtField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customerTxtFieldActionPerformed(evt);
            }
        });
        customerTxtField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                customerTxtFieldKeyPressed(evt);
            }
        });

        quantitylbl1.setText("Customer Name");

        searchCustomerBtn.setText("Search");
        searchCustomerBtn.setEnabled(false);
        searchCustomerBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchCustomerBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(quantityTxtField, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(customerTypeCombo, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(orderDate, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 314, Short.MAX_VALUE)
                                .addComponent(productTxtField)
                                .addComponent(orderNoTxtField, javax.swing.GroupLayout.Alignment.LEADING))
                            .addComponent(quantitylbl)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(customerTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(searchCustomerBtn))
                            .addComponent(quantitylbl1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1198, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(102, 102, 102))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(665, 665, 665)
                        .addComponent(errorlbl, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 472, Short.MAX_VALUE)
                        .addComponent(saveOrderBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(188, 188, 188)
                                        .addComponent(addBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel4))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 510, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING))))
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(totalTxtField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(taxTxtField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(grandTotalTxtField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(274, 274, 274))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(currentUserlbl)
                .addGap(760, 760, 760))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(orderDate, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(orderNoTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addGap(16, 16, 16)
                        .addComponent(customerTypeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(quantitylbl1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(searchCustomerBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(customerTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(34, 34, 34)
                        .addComponent(quantitylbl)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(quantityTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(productTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(currentUserlbl)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(totalTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(taxTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(grandTotalTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(62, 62, 62)
                                .addComponent(errorlbl))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(41, 41, 41)
                                .addComponent(saveOrderBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(87, 87, 87))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(addBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void customerTypeComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customerTypeComboActionPerformed
        if(customerTypeCombo.getSelectedItem()=="Register"){
            customerTxtField.setEnabled(true);
            searchCustomerBtn.setEnabled(true);
        }else{
            customerTxtField.setEnabled(false);
            searchCustomerBtn.setEnabled(false);

        }
    }//GEN-LAST:event_customerTypeComboActionPerformed

    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
        model.setColumnIdentifiers(new String[]{"Barcode","Product", "Quantity", "Price","Total"});
        orderTable.removeColumn(orderTable.getColumnModel().getColumn(0));
        Integer id = (Integer)productTable.getModel().getValueAt(productTable.getSelectedRow(), 0);
        ProductBean product = new ProductDAOImpl().getProductById(id);
       if(!quantityTxtField.getText().isEmpty()){
            int quantity = Integer.parseInt(quantityTxtField.getText());
            int stock = (Integer)productTable.getModel().getValueAt(productTable.getSelectedRow(), 4);
            if(quantity<=stock){
                productTable.setValueAt(stock-quantity, productTable.getSelectedRow(), 3);
                if(checkInList(product)){
                   int t = orderTable.getRowCount();
                    int j=0,currentStock=0;
                    for(int i=0;i<t;i++){
                        if(product.getBarcode().equals(orderTable.getModel().getValueAt(j, 0))){
                            currentStock = Integer.parseInt(orderTable.getModel().getValueAt(j, 2).toString());
                            break;
                        }
                    j++;
                    }
                int newStock = quantity+currentStock;
                orderTable.setValueAt(newStock, j, 1);
                orderTable.setValueAt(newStock*product.getPrice(), j, 3);
                }else{
                    Vector vector = new Vector();
                    Object[] object={product.getBarcode(),product.getName(),quantity,product.getPrice(), quantity * product.getPrice()};
                    System.out.println(quantity * product.getPrice());
                    model.addRow(object);
                }
            }else{
            errorlbl.setText("Out of stock");
            }
       }
       else{
           errorlbl.setText("Select Quantity");
       }
        Double total = sum(orderTable);
        totalTxtField.setText(total.toString());
        calculateGrandTotal();
    }//GEN-LAST:event_addBtnActionPerformed

    private void productTxtFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_productTxtFieldKeyPressed
        UtilityClass.searchFromTable(productTable, productTxtField.getText());
    }//GEN-LAST:event_productTxtFieldKeyPressed

    private void orderTableMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_orderTableMouseReleased
        if(evt.isPopupTrigger()){
            int mPosX = MouseInfo.getPointerInfo().getLocation().x;
            int mPosY = MouseInfo.getPointerInfo().getLocation().y;
            popupMenu.show(this,mPosX,mPosY);
        }
    }//GEN-LAST:event_orderTableMouseReleased

    private void quantityTxtFieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_quantityTxtFieldMouseClicked
        quantitylbl.setText("Quantity");
    }//GEN-LAST:event_quantityTxtFieldMouseClicked

    private void productTxtFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_productTxtFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_productTxtFieldActionPerformed

    private void productTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_productTableMouseClicked
       errorlbl.setText("");
       addBtn.setEnabled(true);
       productTxtField.setText(productTable.getModel().getValueAt(productTable.getSelectedRow(), 1).toString());
    }//GEN-LAST:event_productTableMouseClicked

    private void saveOrderBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveOrderBtnActionPerformed
        if(orderTable.getModel().getRowCount()!=0){
            saveOrder();
            productTxtField.setText("");
            quantityTxtField.setText("");
           ((DefaultTableModel)orderTable.getModel()).setRowCount(0);
        }
        else{
            errorlbl.setText("Pleas Select Your order");
        }
    }//GEN-LAST:event_saveOrderBtnActionPerformed

    private void customerTxtFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customerTxtFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_customerTxtFieldActionPerformed

    private void customerTxtFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_customerTxtFieldKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_customerTxtFieldKeyPressed

    private void searchCustomerBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchCustomerBtnActionPerformed
        SelectCustomer selectCustomer =new SelectCustomer(currentUser);
        selectCustomer.setVisible(true);
        this.hide();
    }//GEN-LAST:event_searchCustomerBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OrderFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OrderFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OrderFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OrderFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new OrderFrame().setVisible(true);
            }
        });
    }
    public void saveOrder(){
        addOrder();
        addOrderDetail();
    }
    public void addOrder(){
        
        String orderNo = orderNoTxtField.getText();
        DateFormat sdf = new SimpleDateFormat("yyyy-MM-dd",Locale.getDefault());
        String dateOrder = sdf.format(orderDate.getDate());

        UserDAO userDAO= new UserDAOImpl();
        UserBean customerBean = null;
        if(customerTypeCombo.getSelectedItem().equals("Register")){
            customerBean = customer;
        }else{
            customerBean = new UserDAOImpl().getUserByName("Walkin");
        }
        OrderBean orderBean = new OrderBean();
        orderBean.setOrderDate(Date.valueOf(dateOrder));
        orderBean.setOrderNo(orderNo);
        orderBean.setUser(customerBean);
        
        orderBean.setTax(taxBean);
        System.out.println("This is the value of taxBean "+taxBean.getTaxId());
        orderBean.setTotalPrice(Double.parseDouble(totalTxtField.getText()));
        AccountBean accountBean = new AccountBean();
        accountBean.setAccountId(1);
        orderBean.setAccount(accountBean);
        LocalDateTime createdDate = LocalDateTime.now();
        DateTimeFormatter dateFormatter = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");
        String createdDates = createdDate.format(dateFormatter);
        Timestamp timestamp = Timestamp.valueOf(createdDates);
        
        orderBean.setCreatedBy(currentUser.getUserId());
        orderBean.setCreatedDate(timestamp);
        orderBean.setModifiedBy(currentUser.getUserId());
        orderBean.setModifiedDate(timestamp);
        OrderDAO orderDAO = new OrderDAOImpl();
        int row = orderDAO.addOrder(orderBean);
        if(row>0){
            JOptionPane.showMessageDialog(this, "Added Successfully");
            
        }else{
            JOptionPane.showMessageDialog(this, "failed");
        }
        
        
    }
    
    public void addOrderDetail(){
        int rowCount = orderTable.getRowCount();
        for(int i=0; i<rowCount ; i++){
            String barcode  = (String) orderTable.getModel().getValueAt(i,0);
            ProductBean productBean = new ProductDAOImpl().getProductByBarcode(barcode);
            Integer quantity = (Integer) orderTable.getModel().getValueAt(i, 2);
            Double price = (Double) orderTable.getModel().getValueAt(i, 3);
            Double totalPrice = (Double) orderTable.getModel().getValueAt(i, 4);
            OrderBean orderBean = new OrderDAOImpl().getlastOrder();
            LocalDateTime createdDate = LocalDateTime.now();
            DateTimeFormatter dateFormatter = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");
            String createdDates = createdDate.format(dateFormatter);
            Timestamp timestamp = Timestamp.valueOf(createdDates);
            OrderDetailBean orderDetailBean = new OrderDetailBean();
            orderDetailBean.setProduct(productBean);
            orderDetailBean.setQuantity(quantity);
            orderDetailBean.setPrice(totalPrice);
            orderDetailBean.setOrder(orderBean);
            
            orderDetailBean.setCreatedDate(timestamp);
            orderDetailBean.setCreatedBy(currentUser.getUserId());
            orderDetailBean.setModifiedDate(timestamp);
            orderDetailBean.setModifiedBy(currentUser.getUserId());
            OrderDetailDAO orderDetailDAO = new OrderDetailDAOImpl();
            int row = orderDetailDAO.addOrderDetail(orderDetailBean);
            
            if(row>0){
                JOptionPane.showMessageDialog(this, "Added Successfully");
            }else{
                JOptionPane.showMessageDialog(this, "failed");
            }
            
        }
    }
    
  
    public static DefaultTableModel productTableModel (ResultSet rs){
        try {
            ResultSetMetaData metaData = rs.getMetaData();
            Vector<String> columnNames = new Vector<>();
            int columnCount = metaData.getColumnCount();
            System.out.print(columnCount);
            for(int column =1; column <= columnCount; column++){
                columnNames.add(metaData.getColumnName(column));
//                System.out.println("Im in");
            }
            Vector<Vector<Object>> data = new Vector<Vector<Object>>();
            while(rs.next()){
                Vector<Object> vector = new Vector<Object>();
                for(int columnIndex = 1; columnIndex <= columnCount; columnIndex++){
                    vector.add(rs.getObject(columnIndex));
                }
                data.add(vector);
            }
             return  new DefaultTableModel(data,columnNames);
        } catch (SQLException ex) {
           
        }
        return null;
    }
    
    public void populateProductTable(){
        ProductDAO productDAO = new ProductDAOImpl();
        ResultSet rst = productDAO.getProducts();
       
        productTable.setModel(productTableModel(rst));
       productTable.removeColumn(productTable.getColumnModel().getColumn(0));
     
    }
    
    public void popMenu(JFrame frame){
        menuItem = new JMenuItem("Remove Record");
        menuItem.getAccessibleContext().setAccessibleDescription("Remove Record");
        
       menuItem.addActionListener(new ActionListener(){

            @Override
            public void actionPerformed(ActionEvent e) {
               
               Integer quantity = (Integer) orderTable.getModel().getValueAt(orderTable.getSelectedRow(),2);
               Integer productQuantity = (Integer) productTable.getModel().getValueAt(productTable.getSelectedRow(), 4);
               
               productTable.setValueAt(productQuantity + quantity, productTable.getSelectedRow(), 3);
               ((DefaultTableModel)orderTable.getModel()).removeRow(orderTable.getSelectedRow());
               Double total = sum(orderTable);
               totalTxtField.setText(total.toString());
               calculateGrandTotal();
            }
       });
       
       popupMenu.add(menuItem);
    }
    
//   public void populateCustomerCombo(){
//       UserDAO userDAO = new UserDAOImpl();
//       List<UserBean> customerList= userDAO.getCustomerList();
//       customerTypeCombo.addItem("Select Customer");
//       customerList.forEach((UserBean customer) -> {
//           customerTypeCombo.addItem(customer.getFullName());
//       });
//   }
   
   public void orderNo(){
       BarcodeGenerator  codeGenerator = new BarcodeGenerator();
       String orderNo = codeGenerator.generateRandomString();
       OrderDAO orderDAO = new OrderDAOImpl();
       if(!orderDAO.CheckOrderNo(orderNo)){
          orderNoTxtField.setText(orderNo);
       }else{
           orderNo();
       }
       
   }

   
   
   // Method for checking product in order details table 
   
   
   public boolean  checkInList(ProductBean pb){
       
       int total = orderTable.getRowCount();
       
       for(int i=0;i<total;i++){
           if(pb.getBarcode().equals(orderTable.getModel().getValueAt(i, 0))){
               return true;
           }
       }
       
       return false;
   }
   
   public Double sum(JTable table){
       Double sum = 0.0;
       int rowCount = table.getRowCount();
       for(int i=0; i< rowCount ; i++){
           sum += (Double) table.getModel().getValueAt(i, 4);
           
       }
       return sum;
   }
   
   public void setCurrentTax(){
       TaxDAO taxDAO = new TaxDAOImpl();
       taxBean =taxDAO.getCurrentTax();
       
       
       taxTxtField.setText(taxBean.getTax().toString());
   }
   
   public void calculateGrandTotal(){
       Double total = Double.parseDouble(totalTxtField.getText());
       Double tax = Double.parseDouble(taxTxtField.getText());
       Double taxAmount = (tax/100)*total;
       Double grandTotal = total + taxAmount;
       grandTotalTxtField.setText(grandTotal.toString());
   }
   
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBtn;
    private javax.swing.JLabel currentUserlbl;
    private javax.swing.JTextField customerTxtField;
    private javax.swing.JComboBox<String> customerTypeCombo;
    private javax.swing.JLabel errorlbl;
    private javax.swing.JTextField grandTotalTxtField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private com.toedter.calendar.JDateChooser orderDate;
    private javax.swing.JTextField orderNoTxtField;
    private javax.swing.JTable orderTable;
    private javax.swing.JTable productTable;
    private javax.swing.JTextField productTxtField;
    private javax.swing.JTextField quantityTxtField;
    private javax.swing.JLabel quantitylbl;
    private javax.swing.JLabel quantitylbl1;
    private javax.swing.JButton saveOrderBtn;
    private javax.swing.JButton searchCustomerBtn;
    private javax.swing.JTextField taxTxtField;
    private javax.swing.JTextField totalTxtField;
    // End of variables declaration//GEN-END:variables
}
